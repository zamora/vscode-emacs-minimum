{
    "name": "vscode-emacs-minimum",
    "displayName": "Emacs Mininum Keymap",
    "description": "Emacs keybindings for only cursor moves.",
    "icon": "emacs_pacifica.png",
    "version": "1.1.2",
    "publisher": "zamora",
    "homepage": "https://github.com/zamora/vscode-emacs-minimum",
    "repository": {
        "type": "git",
        "url": "https://github.com/zamora/vscode-emacs-minimum"
    },
    "bugs": "https://github.com/zamora/vscode-emacs-minimum/issues",
    "engines": {
        "vscode": "^1.11.0"
    },
    "categories": [
        "Other",
        "Keymaps"
    ],
    "keywords": [
        "emacs",
        "shortcuts",
        "keybindings",
        "behavior",
        "selection"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "keybindings": [
            {
                "key": "alt+a",
                "mac": "cmd+a",
                "command": "editor.action.selectAll",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+b",
                "mac": "cmd+b",
                "command": "editor.action.toggleSidebarVisibility"
            },
            {
                "key": "alt+f",
                "mac": "cmd+f",
                "command": "actions.find",
                "when": "!findWidgetVisible"
            },
            {
                "key": "alt+f",
                "mac": "cmd+f",
                "command": "editor.action.nextMatchFindAction",
                "when": "findWidgetVisible"
            },
            {
                "key": "alt+p",
                "mac": "cmd+p",
                "command": "workbench.action.quickOpen"
            },
            {
                "key": "alt+e",
                "command": "workbench.action.quickOpen"
            },
            {
                "key": "alt+n",
                "mac": "cmd+n",
                "command": "workbench.action.files.newUntitledFile"
            },
            {
                "key": "alt+backspace",
                "mac": "cmd+backspace",
                "command": "deleteAllLeft"
            },
            {
                "key": "alt+k",
                "command": "deleteAllRight"
            },
            {
                "key": "right",
                "command": "emacs.cursorRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+d",
                "command": "deleteRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+f",
                "command": "emacs.cursorRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+f",
                "command": "emacs.cursorRight",
                "when": "terminalFocus"
            },
            {
                "key": "left",
                "command": "emacs.cursorLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+b",
                "command": "emacs.cursorLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "up",
                "command": "emacs.cursorUp",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "up",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "command": "emacs.cursorUp",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "command": "emacs.cursorUp",
                "when": "terminalFocus"
            },
            {
                "key": "ctrl+p",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "down",
                "command": "emacs.cursorDown",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "down",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "command": "emacs.cursorDown",
                "when": "editorTextFocus && !suggestWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "home",
                "command": "emacs.cursorHome",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+a",
                "command": "emacs.cursorHome",
                "when": "editorTextFocus"
            },
            {
                "key": "end",
                "command": "emacs.cursorEnd",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+e",
                "command": "emacs.cursorEnd",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+e",
                "command": "emacs.cursorEnd",
                "when": "terminalFocus"
            },
            {
                "key": "ctrl+alt+f",
                "command": "emacs.cursorWordRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+alt+b",
                "command": "emacs.cursorWordLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+p",
                "command": "showPrevParameterHint",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+n",
                "command": "showNextParameterHint",
                "when": "editorTextFocus && parameterHintsVisible"
            },
            {
                "key": "ctrl+p",
                "command": "selectPrevQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "command": "selectNextQuickFix",
                "when": "editorFocus && quickFixWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "command": "selectPrevSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+n",
                "command": "selectNextSuggestion",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpenNavigatePrevious",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+n",
                "command": "workbench.action.quickOpenNavigateNext",
                "when": "inQuickOpen"
            },
            {
                "key": "ctrl+alt+f",
                "command": "emacs.cursorWordRight",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+alt+b",
                "command": "emacs.cursorWordLeft",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+shift+.",
                "command": "emacs.cursorBottom",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+shift+.",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+shift+,",
                "command": "emacs.cursorTop",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+shift+,",
                "command": "closeFindWidget",
                "when": "editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+l",
                "command": "emacs.C-l",
                "when": "editorTextFocus"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "lint": "tslint -p tslint.json --type-check **/*.ts"
    },
    "devDependencies": {
        "@types/mocha": "^2.2.41",
        "@types/node": "^6.0.81",
        "mocha": "^3.4.2",
        "typescript": "^2.4.1",
        "vscode": "^1.1.4"
    },
    "dependencies": {
        "clipboardy": "^1.1.4"
    }
}
